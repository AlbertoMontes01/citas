
@page "/Persons"
@inject HttpClient _http /*se necesita para comunicarse con la api*/
@inject NavigationManager _navigate
<h3>Patients</h3>

<EditForm Model="people" OnValidSubmit="Save">
    <DataAnnotationsValidator/>
    <div class="form-group row">
        <label for="inputName" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText type="text" class="form-control" id="inputName" @bind-Value="people.Nombre" />
            <ValidationMessage For="@(() => people.Nombre)" />
        </div>
    </div>
    <br/>
    <div class="form-group row">
        <label for="inputName" class="col-sm-2 col-form-label">Date of birth</label>
        <div class="col-sm-10">
            <InputDate format="dd/MM/yyyy" @bind-Value="people.Born"></InputDate>
            <ValidationMessage For="@(() => people.Born)"/>
        </div>
    </div>

    <div class="form-group row">
        <label for="inputAddress" class="col-sm-2 col-form-label">Address</label>
        <div class="col-sm-10">
            <InputText @bind-Value="people.Domicilio" id="inputAddress"></InputText>
            <ValidationMessage For="@(() => people.Domicilio)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="inputPhone" class="col-sm-2 col-form-label">Number phone</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="inputPhone" @bind-Value="people.Phone" />
            <ValidationMessage For="@(() => people.Phone)" />
        </div>
    </div>
    
    <div class="form-group row">
        <label for="inputEmail" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="inputEmail" @bind-Value="people.Correo" />
            <ValidationMessage For="@(() => people.Correo)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary"> Save</button>
</EditForm>

<!--@if(patients.Count > 0)
{
    <table class="table table-striped">
		<thead>
			<tr>
				<th>Name</th>
				<th>Date of birth</th>
				<th>Address</th>
				<th>Phone</th>
                <th>Email</th>
                <td>Actions</td>
			</tr>
		</thead>
		<tbody>
			@foreach (Pacient patient in patients)
			{
				<tr>
					<td>@patient.Nombre</td>
					<td>@patient.Born</td>
					<td>@patient.Domicilio</td>
					<td>@patient.Phone</td>		
                    <td>@patient.Correo</td>
                    <td><button class="btn" @onclick="(() => Delete(patient.Id))"><span class="oi oi-trash"></span></button></td>
                </tr>
			}
		</tbody>
	</table>
}-->


@code {
    private Pacient people = new();
    private List<Pacient> patients = new();

    private async void Save()
    {
        //patients.Add(people);
        //people = new Pacient();
        await _http.PostAsJsonAsync("api/Pacients", people);
        _navigate.NavigateTo("Persons/AllPacients");
    }

    protected override async Task OnInitializedAsync() => patients = await _http.GetFromJsonAsync<List<Pacient>>("api/Pacients");
}